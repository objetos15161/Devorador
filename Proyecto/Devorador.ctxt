#BlueJ class context
comment0.params=numPuntos\ numVidas\ numNivel
comment0.target=Devorador(int,\ int,\ int)
comment0.text=\r\n\ Constructor\ de\ la\ Clase\ Devorador\ que\ tiene\ como\ parametros\ puntos,\ vidas\ ,\ nivel,\ se\ asignan\ las\ imagenes\ a\ las\ variables\ definidas\ anteriormente,\r\n\ la\ variable\ booleana\ se\ define\ com\ falso,\ avanza\ se\ iguala\ a\ 0,\ direccion\ en\ IZQUIERDA\ y\ finalmente\ se\ crea\ un\ objeto\ records.\r\n
comment1.params=mundo
comment1.target=void\ addedToWorld(greenfoot.World)
comment1.text=\r\n\ Este\ metodo\ agrega\ los\ contadores\ de\ nivel,\ puntos\ y\ vidas\ al\ mundo\ cuando\ se\r\n\ crea\ el\ objeto\ Devorador\ asignandole\ coordenadas\ espesificas,\ estos\ llevaran\ el\ registro\ del\ aumento\ y\ decremento.\r\n
comment10.params=
comment10.target=void\ checaVidas()
comment10.text=\r\n\ \u00C9ste\ m\u00E9todo\ verifica\ si\ los\ puntos\ o\ las\ vidas\ del\ Devorador\ llegaron\ a\ 0\ y\ le\ avisa\ al\ jugador\ que\ ha\ perdido\ \r\n
comment11.params=
comment11.target=void\ aumentaNivel()
comment11.text=\r\n\ \u00C9ste\ m\u00E9todo\ verifica\ si\ el\ Devorador\ junto\ los\ puntos\ necesarios\ para\ avanzar\ de\ nivel\ o\ llego\ al\ final\ del\ juego\r\n
comment12.params=
comment12.target=int\ getNivel()
comment12.text=\r\n\ \u00C9ste\ m\u00E9todo\ regresa\ al\ WorldJack\ el\ nivel\ en\ el\ que\ esta\ \r\n
comment13.params=
comment13.target=int\ getVidas()
comment13.text=\r\n\ \u00C9ste\ m\u00E9todo\ regresa\ las\ vidas\ del\ jugador\r\n
comment14.params=
comment14.target=int\ getPuntos()
comment14.text=\r\n\ \u00C9ste\ m\u00E9todo\ regresa\ las\ puntos\ que\ ha\ acumulado\ el\ jugador\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Este\ metodo\ es\ donde\ se\ mandan\ llamar\ todas\ las\ validaciones\ que\ contiene\ el\ Devorador,\ para\ que\ el\ jugador\ pueda\ mover\ el\ objeto\ Devorador\r\n\ e\ interactuar\ con\ el\ entorno\ de\ los\ niveles.\r\n
comment3.params=
comment3.target=void\ checaTeclas()
comment3.text=\r\n\ En\ este\ metodo\ se\ hacen\ las\ validaciones\ sobre\ el\ movimiento\ de\ las\ teclas\ y\ la\ direccion\ que\ debe\ tomar\ el\ Devorador\r\n
comment4.params=
comment4.target=void\ avanzaJack()
comment4.text=\r\n\ \u00C9ste\ m\u00E9todo\ verifica\ si\ el\ ladron\ esta\ parado\ o\ caminando\ con\ la\ variable\ booleana\ parado.\ Se\ verifica\ su\r\n\ direcci\u00F3n\ y\ movimiento\ y\ se\ cambia\ por\ la\ imagen\ que\ le\ corresponda\ para\ cuando\ se\ presione\r\n\ una\ tecla\ para\ que\ simule\ que\ el\ personaje\ camina.\ Este\ m\u00E9todo\ se\ invoca\ en\ el\ m\u00E9todo\ caminar.\r\n
comment5.params=
comment5.target=void\ caminar()
comment5.text=\r\n\ M\u00E9todo\ que\ simula\ que\ camina\ el\ Jugador\ con\ un\ ciclo\ que\ invoca\ en\ m\u00E9todo\ avanzaJack.\r\n
comment6.params=
comment6.target=void\ validacionesLimites()
comment6.text=\r\n\ Este\ m\u00E9todo\ contiene\ las\ validaciones\ necesarias\ para\ que\ el\ Jugador\ no\ pase\ el\ limite\ \r\n\ y\ que\ no\ pase\ las\ clases\ Counter\ y\ Selve.\r\n
comment7.params=
comment7.target=void\ validaFruta()
comment7.text=\r\n\ \u00C9ste\ m\u00E9todo\ verifica\ si\ el\ Devorador\ esta\ "devorando"\ frutas,\ asi\ mismo\ agrega\ sonidos\ y\ suma\ puntos\r\n
comment8.params=
comment8.target=void\ validaComidaCha()
comment8.text=\r\n\ \u00C9ste\ m\u00E9todo\ verifica\ si\ el\ Devorador\ esta\ "devorando"\ comida\ chatarra,\ asi\ mismo\ agrega\ sonidos\ y\ resta\ puntos\ o\ vidas\ segun\ sea\ el\ caso\ \r\n
comment9.params=
comment9.target=void\ validaObstaculos()
comment9.text=\r\n\ \u00C9ste\ m\u00E9todo\ verifica\ si\ el\ Devorador\ fue\ "atropellado"\ o\ cayo\ en\ alguno\ de\ los\ obstaculos,\ asi\ mismo\ agrega\ sonidos\ y\ resta\ puntos\ o\ vidas\ segun\ sea\ el\ caso\ \r\n
numComments=15
